<!DOCTYPE html>
<html>
<head>
  <script
    src="https://code.jquery.com/jquery-3.5.1.min.js"
    integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
    crossorigin="anonymous"></script>
  <script
    src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"
    integrity="sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU="
    crossorigin="anonymous"></script>
  <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css"/>
  <!-- <script type="text/javascript"
    src="/FileSaver.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/web-streams-polyfill@2.0.2/dist/ponyfill.min.js"></script>
   
    <script src="https://cdn.jsdelivr.net/gh/eligrey/Blob.js/Blob.js"></script>
    <script type="text/javascript"
    src="/StreamSaver.js"></script> -->
    <!-- <script type="text/javascript"
    src="/imageCreator.js"></script> -->
  <style type="text/css">
    .dochange_button{
        width:90%;
        height:100px;
        clear: both;
        margin-left:5%;
        margin-right:5%;
        margin-top:20px;
        margin-bottom:20px;        
    }
    .textarea_gibo{
        width:100%;
        clear:both;
    }
  </style>
  <script type="text/javascript">
    $(document).ready(function(){
      $('#create').click(function(){
        //ev.preventDefault();
        generate();
      });

      
    });

    $('#hiddenframe').on('load', function(){
        closeLoadingWithMask();
        alert('fin');
    });

    $(document).on('iframeready', function(){alert('findocument');closeLoadingWithMask()});

    /* function gen(){
      const pgn = $('#pgn').val();
      var creator = new ImageCreator();
      creator.generateChessImages(pgn);
    } */

    function generate(){
      const pgn = $('#pgn').val().trim();
      const filepath = $('#filepath').val();
      var array = new Uint32Array(1);
      window.crypto.getRandomValues(array);
      //console.log(array);

      LoadingWithMask('/images/Bars-1s-200px.gif');
      $('#hiddenframe').attr('src', `/image/download?pgn=${pgn}&uid=${array.toString()}`);

      $('#hiddenframe').on('load', function(){
        console.log('fin');
        //alert('fin');
        closeLoadingWithMask();
        //document.body.removeChild(element);
      });

      // LoadingWithMask('/Bars-1s-200px.gif')
      
      // window.open(`/func/image?pgn=${pgn}`);
      // closeLoadingWithMask();
      //return;
      return;
      //alert("generate");
      $.ajax({
        url:'/image/download',
        type: 'get',
        data: {pgn:pgn.trim(), filepath:filepath},
        //processData: false,
        //dataType: 'blob',
        success:function(output, status, xhr){
          closeLoadingWithMask();
          //alert(res);
          //alert('done');
          /* if(output.code == 200){
            console.log(typeof output.code);
          //saveAs(output, "1.zip");
          //console.log(output);
          //location.href = output.zip;

            location.assign(`/${output.filename}.zip`);            
          }
          else if(output.code == 500){
            alert('오류가 발생했습니다.');
          } */
          var filename = 'default.zip';
          var disposition = xhr.getResponseHeader('Content-Disposition');
          if (disposition && disposition.indexOf('attachment') !== -1) {
              var filenameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
              var matches = filenameRegex.exec(disposition);
              if (matches != null && matches[1]) filename = matches[1].replace(/['"]/g, '');
          }
          //var filename = xhr.getResponseHeader('filename');
          var element = document.createElement('a');
          element.setAttribute('href', 'data:application/zip;charset=base64,' + output);
          element.setAttribute('download', filename);
          element.style.display = 'none';
          document.body.appendChild(element);
          element.click();
          document.body.removeChild(element);
        }
/* 
          var zipName = '1.zip';

          const blob = new Blob([output]);
          const fileStream = streamSaver.createWriteStream(zipName, {
            size: blob.size // Makes the procentage visiable in the download
          });

          console.log(blob.size);
          const readableStream = blob.stream();

          if(window.WritableStream && readableStream.pipeTo){
            return readableStream.pipeTo(fileStream).then(() => console.log('done writing'))
          }

          // Write (pipe) manually
          window.writer = fileStream.getWriter();      

          const reader = readableStream.getReader();
          const pump = () => reader.read()
            .then(res => res.done
              ? writer.close()
              : writer.write(res.value).then(pump));

          pump();
 */





          //zipFileName = '1.zip';
          //var blob = new Blob([output], {type:"octet/stream"});
          /* if (isIE()) {            
            saveToFile_IE(zipName, output);
          } else {
            saveToFile_Chrome(zipName, output);
          } */
       /*  },
        fail:function(res){
          closeLoadingWithMask();
          //console.log(res.data);
          alert('오류가 발생했습니다.');
          //setResult();
        },
        always:function(res){
          closeLoadingWithMask();
          //console.log(res);
          alert('always');
          //setResult();
        } */
      //});
    });
    }
    function setResult(){
      $('#result').innerHTML = '이미 생성 완료되었습니다.';
    }
    function isIE() {
        return (navigator.appName === 'Netscape' && navigator.userAgent.search('Trident') !== -1) ||
            navigator.userAgent.toLowerCase().indexOf("msie") !== -1;
    }

    function saveToFile_IE(fileName, content) {
        //var blob = new Blob([content], { type: "octet/stream", endings: "native" });
        window.navigator.msSaveBlob(content, fileName);
        //window.navigator.msSaveOrOpenBlob(blob, fileName);
    }

    function saveToFile_Chrome(fileName, content) {
        //var blob = new Blob([content], { type: 'octet/stream' });
        var objURL = window.URL.createObjectURL(content);
                
        // 이전에 생성된 메모리 해제
        if (window.__Xr_objURL_forCreatingFile__) {
            window.URL.revokeObjectURL(window.__Xr_objURL_forCreatingFile__);
        }
        window.__Xr_objURL_forCreatingFile__ = objURL;
        var a = document.createElement('a');
        a.download = fileName;
        a.href = objURL;
        a.click();
    }

    /* function saveToFile_Chrome(fileName, content) {
        var blob = new Blob([content], { type: 'octet/stream' });
        objURL = window.URL.createObjectURL(blob);
                
        // 이전에 생성된 메모리 해제
        if (window.__Xr_objURL_forCreatingFile__) {
            window.URL.revokeObjectURL(window.__Xr_objURL_forCreatingFile__);
        }
        window.__Xr_objURL_forCreatingFile__ = objURL;
        var a = document.createElement('a');
        a.download = fileName;
        a.href = objURL;
        a.click();
    } */

    function test(imageName) {
        LoadingWithMask('your site\'s image path');
        setTimeout("closeLoadingWithMask()", 3000);
    }
    
    function LoadingWithMask(gif) {
        //화면의 높이와 너비를 구합니다.
        var maskHeight = $(document).height();
        var maskWidth  = window.document.body.clientWidth;
        
        //화면에 출력할 마스크를 설정해줍니다.
        var mask       ="<div id='mask' style='position:absolute; z-index:9000; background-color:#000000; display:none; left:0; top:0;'></div>";
        var loadingImg ='';
          
        //loadingImg +=" <img src='"+ gif +"' style='position: absolute; display: block; margin: 0px auto;'/>";
        loadingImg +=" <img src='/Bars-1s-200px.gif' style='position: absolute; display: block; margin: 0px auto;'/>";
    
        //화면에 레이어 추가
        $('body')
            .append(mask)
    
        //마스크의 높이와 너비를 화면 것으로 만들어 전체 화면을 채웁니다.
        $('#mask').css({
                'width' : maskWidth,
                'height': maskHeight,
                'opacity' :'0.3'
        });
      
        //마스크 표시
        $('#mask').show();
      
        //로딩중 이미지 표시
        $('#loadingImg').append(loadingImg);
        $('#loadingImg').show();
    }
    
    function closeLoadingWithMask() {
        $('#mask, #loadingImg').hide();
        $('#mask, #loadingImg').empty(); 
    }



  </script>
</head>
<body>
  <%-include('menu') %>

<h1>이미지 추출하기</h1>
<h2>기보 붙여넣기</h2>
<textarea id="pgn" name="pgn" class="ui-widget ui-state-default ui-corner-all textarea_gibo" rows="5">
  1. e4 e5 2. Bc4 Nc6 3. Nf3 h6 4. d3 Bc5 5. O-O Nf6 6. Nc3 O-O 7. Be3 Bxe3 8. fxe3 d6 9. d4 Bg4 10. h3 Bh5 11. g4 Nxg4 12. hxg4 Bxg4 13. Qe1 Kh8 14. Nh2 Bh3 15. Rf3 Qg5+ 16. Rg3 Qh5 17. Be2 Qh4 18. Nf3 Qh5 19. Kf2 f5 20. Nxe5 Qh4 21. Ng6+ Kh7 22. Nxh4 fxe4+ 23. Kg1 g5 24. Rxh3 gxh4 25. Rxh4 Rg8+ 26. Rg4 Rxg4+ 27. Bxg4 Rg8 28. Qh4 Nd8 29. Kf2 Rf8+ 30. Ke2 Nf7 31. Rf1 Kg7 32. Rf6 1-0
</textarea>
<!-- <h2>파일 생성 경로 지정하기</h2> -->
<!-- <input type="text" id="filepath" name="filepath" class="textarea_gibo">C:\node\chessimage\output</input> -->
<button id="create" name="create" class="ui-widget ui-corner-all dochange_button" onclick='generate'>이미지 생성하기</button>
<span id="result"></span>
<iframe id="hiddenframe" style="display: none;"></iframe>

<!-- <img src='/Bars-1s-200px.gif' style='position: absolute; display: block; margin: auto auto;'/> -->
</body>
</html>